---
- name: Ensure the application group exists
  group:
    name: "{{ nodejs_app_groupname }}"
    state: present

- name: Ensure the application user account exists
  user:
    name: "{{ nodejs_app_username }}"
    comment: "Node.js System Account"
    group: "{{ nodejs_app_groupname }}"
    shell: "{{ nodejs_app_user_shell }}"
    home: "{{ nodejs_app_home_dir }}"

- name: Clone application repository
  git:
    repo: "{{ nodejs_app_git_repo | mandatory }}"
    dest: "{{ nodejs_app_install_dir | mandatory }}"
    version: "{{ nodejs_app_git_branch | mandatory }}"
    depth: 1
  when: nodejs_app_git_clone

- name: Make sure the application install directory exists and is owned by the appropriate user
  file:
      path: "{{ nodejs_app_install_dir }}"
      owner: "{{ nodejs_app_dev_username if is_vagrant else nodejs_app_username }}"
      group: "{{ nodejs_app_dev_username if is_vagrant else nodejs_app_username }}"
      recurse: true
      state: directory
  when: not is_vagrant

# Workaround for various issues with VirtualBox shared folders and NPM is
# to bind mount the node_modules directory outside the shared folder mount
# point.

- name: Create application's node_modules directory under /var/tmp
  file:
    path: '/var/tmp/{{ nodejs_app_dev_username }}-{{ nodejs_app_name }}'
    owner: '{{ nodejs_app_dev_username }}'
    group: '{{ nodejs_app_dev_username }}'
    state: directory
    mode: '0775'
  when: (is_vagrant) and (nodejs_app_shadow_node_modules)

- name: Ensure the application's node_module directory exists
  file:
    path: '{{ nodejs_app_install_dir }}/node_modules'
    owner: '{{ nodejs_app_dev_username }}'
    group: '{{ nodejs_app_dev_username }}'
    state: directory
    mode: '0775'
  when: (is_vagrant) and (nodejs_app_shadow_node_modules)


- name: Bind mount application's node_modules
  mount:
    name: '{{ nodejs_app_install_dir }}/node_modules'
    src: '/var/tmp/{{ nodejs_app_dev_username }}-{{ nodejs_app_name }}'
    fstype: none
    opts: bind,defaults
    state: mounted
  when: (is_vagrant) and (nodejs_app_shadow_node_modules)

- name: Run application related commands as the application user
  command: "{{ item }}"
  args:
    chdir: "{{ nodejs_app_install_dir }}"
  with_items: "{{ nodejs_app_commands }}"
  become: yes
  become_user: "{{ nodejs_app_dev_username if is_vagrant else nodejs_app_username }}"
  when: nodejs_app_commands
